networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend
    networks:
      - dev
      

  db:
    container_name: my_project_postgres
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRESS_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRESS_DB_PASSWORD}
      POSTGRES_DB: taldau
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d 
      - postgres:/var/lib/postgres/data
    ports:
      - ${POSTGRESS_DB_HOST_PORT}:5432
    networks:
      - dev  
    restart: always

  backend:
    container_name: my_project_backend
    build: ./backend
    depends_on:
      - db
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0 --port 8000'

    volumes:
      - ./backend:/src/backend
    networks:
      - dev  
    ports:
    - ${APP_HOST_PORT}:8000
    restart: always  
    env_file:
      - .env

  frontend:
    build: ./frontend
    networks:
      - dev
    
volumes:
  postgres:
